# for loop
  - for 며
  - 동일한 작업을 정해진 횟수만큼 반복할 때 사용한다.
  - 구조:
  
    for var in var1 var2 var 3 # a b c
    do
      cmd1
      cmd2
      ...
    done

  - do - done 구간을 바디라고 부른다.
  - 바디 구간은 var 개수만큼 반복이 되고, 마지막 var을 타고 종료가 된다.

Q. file1, file2, file3을 돌면서 파일 출력하기
    => for file in file[1-3] #file1 file2 file3
       do
          cat $file
       done

    - 문자 치환 가능함
    
Q. 현재 디렉토리의 모든 파일에 대해서 루프를 타고자 한다.
    => for file in *

Q. 파일 목록이 있고 filelist.txt에 저장되어 있다.
   이 파일에 있는 모든 파일 리스트를 순회하는 코드
    => for file in $( cat "filelist.txt")
    => filelist=$( cat "filelist.txt" )
       for file in $filelist

  ## in이 없는 for loop
    구조:  
    for file # 들어오는 모든 인수를 순회한다.
    do
    ...

    ./sample.sh 1 2 3 4 5

    ### '$*' vs '$@'
      - 입력되는 모든 인수
      - 따옴표가 있고 없을 때 차이점 비교

    ### $*
      - 따옴표로 감싸면 모든 인수를 1개로 취급한다.
      - 따옴표로 감싸면 null을 출력한다.

    ### $@
      - 따옴표로 감싸면 입력되는 인수의 따옴표를 인지해서 개수를 취급한다.
      - 인수가 null이면 실행하지 않는다.
    

  Q. 들어오는 인수 갯수 프린트
    => echo "전체 인수 개수 : $#"
    들어오는 모든 인수 프린트
    => echo "입력된 인수 : $*"
    모든 인수 순회하면서 하나씩 프린트
    => for var in $* # "$*"과 구별
       do
          echo $var
       done

       for var in $@ 
       do
          echo [2] $var # [2]는 구별하기 위함
       done
    

# while
  - 조건이 성립할 때까지 순회하는 반복문에 사용한다.
  - 구조:

    while cmd # 참이면/종료상태 바디를 순회함
    do
      cmd1
      cmd2
      # cmd 변화 상태 (무한 루프에 빠지지 않도록 주의)
    done

    ? 다른 언어처럼 cmd 1이면 무한루프에 빠질 수 있나 ?

Q. 1-5까지 출력하는 while loop
    => count=1
       while [ count -lt 6 ]
       do
          echo "$count"
          count=(( $count + 1 ))
        done

## until loop
  - 구조:
    until cmd # nonzero, false
    do
      cmd1
      cmd2
    done

  - 특정 이벤트가 일어나길 기다릴 때 많이 사용한다.

## break
  - 원하는 조건에 의해서 루프를 빠져나오는 명령
  - 구조:
    while cmd
    do
      cmd1
      cmd2
      if ..
      then
        break n # break 3

## 결과물 활용하기
  for
  ...
  done

  - 파이프라인 연결하기
    ... done |
  - 백그라운드 보내기
    ... done &
  - 리다이렉션
    ... done > file.txt

## 한줄로 작성하기
  - 세미콜론으로 연결 가능
    for i in [1-5]; do echo $1; done

    * do 다음에 세미콜론 넣지 않은 것 주의
      if [ ] ; then # then도 마찬가지
        .....
      fi
  - 코드 짧을 때
  - 가독성 위해서 사용한다.

Q. 로그인 된 유저 확인하는 스크립트 작성하기
  who | 원하는 유저 이름 추출
  - 인수는 1개 들어와야 함 (종료코드 설정, 프린트)
  - 60초마다 확인하도록 프로그램 짠다.
    sleep 60
  - "$user"
  
   
